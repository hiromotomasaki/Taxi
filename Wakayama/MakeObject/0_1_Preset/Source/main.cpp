/**
 * main.cpp
 *
 * Copyright (c) 2016 HIROMOTO,Masaki
 *
 */
#include "main.hpp"

using namespace hiro;


// 【この関数の目的】
// ・営業領域の設定
//   - 大まかな領域（長方形）の定義
//   - 1.大まかな領域の中で追加する複数の領域（長方形）の指定
//   - 2.大まかな領域の中で営業領域に含まれない複数の領域（長方形）の指定（営業領域の外枠の中で1.に含まれて2.に含まれない領域が営業領域となる．）
//   - セルの大きさ（メートル）の定義
// ・表示ピンの抽出条件の設定（時間幅や日にちの範囲(何日前，何分前から何分後までか)）
// ・クライアントを中心にした時の探索範囲円の半径r[m]の定義
// ・探索範囲内でのオブジェクトの底辺の長さの定義（探索範囲の中心から見てx_a=0[m]の時の底辺の長さをl_a[m], x_b=r[m]の時の底辺の長さをl_b[m]とする.その間の位置x[m]での底辺の長さl[m]は関数で決定する.）
// ・タクシーの方向を決定するときに使用する二点間の距離の最大値（最大値を越すとdir1の探索範囲になる．越していなければdir2からdir9までの8方向のうちどれかの探索範囲になる）
// ・dir2からdir9までに共通の扇型の探索範囲の中心角度[deg]（45度から180度まで）
// ・需要が集中していると判別するためのしきい値
// ・需要が集中していて空車があまりいないと判別するためのしきい値

int main(int argc, char *argv[])
{
	// ------------- ユーザー入力値  ------------- //
	GeographicCoordinate gCoorNW( 1,1 );
	GeographicCoordinate gCoorSE( 1,1 );
	double removeArea[][2] = {
		{ -1, -1 },				// 取り除くエリアがない場合に要素が0になってしまうため入れている
		{ 1, 1 },
	};
	// ------------------------------------------- //

	// 確認
	{
		int n1 = sizeof(removeArea) / sizeof(removeArea[0]);
		int n2 = sizeof(removeArea[0]) / sizeof(removeArea[0][0]);
		std::cout << "行数 = " << n1 << ", 列数 = " << n2 << "\n";
	}

    return EXIT_SUCCESS;
}
